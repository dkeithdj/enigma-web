---
import "@/styles/globals.css";
import { imageUrlFor } from "@/utils/sanity";
import { getSiteSettings } from "@/utils/sanity/client";

export interface BaseHeadProps {
  title?: string;
  description?: string;
  canonicalURL?: URL | string;
  image?: string;
}

const settings = await getSiteSettings();

const title = Astro.props.title || settings.title;
const description = Astro.props.description || settings.description;
const canonicalURL = Astro.props.canonicalURL || settings.url;
// const image = new URL(Astro.props.image || "/openImage.png", Astro.site);
const image = imageUrlFor(settings.ogImage).url();
---

<meta charset="utf-8" />
<meta
  name="viewport"
  content="width=device-width, initial-scale=1, viewport-fit=cover"
/>

<!-- Primary Meta Tags -->
<title>{title || settings.title}</title>
<meta name="title" content={title || settings.title} />
<meta name="description" content={description || settings.description} />

<link
  rel="apple-touch-icon"
  sizes="180x180"
  href="/favicon/apple-touch-icon.png"
/>
<link
  rel="icon"
  type="image/png"
  sizes="32x32"
  href="/favicon/favicon-32x32.png"
/>
<link
  rel="icon"
  type="image/png"
  sizes="16x16"
  href="/favicon/favicon-16x16.png"
/>
<link rel="manifest" href="/favicon/site.webmanifest" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical -->
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={image} />
<meta property="og:image:url" content={image} />
<meta property="og:image:secure_url" content={image} />

<!-- Twitter -->
<!-- <meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={image} /> -->
